<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[zyounan's blog]]></title><description><![CDATA[Blog posted about ...]]></description><link>https://zyounan.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Tue, 13 Apr 2021 15:46:37 GMT</lastBuildDate><item><title><![CDATA[「cppcon-2018」 RVO-harder-than-it-looks]]></title><description><![CDATA[视频地址
Slides]]></description><link>https://zyounan.github.io/cxx/[cppcon-2018]-rvo-harder-than-it-looks/</link><guid isPermaLink="false">https://zyounan.github.io/cxx/[cppcon-2018]-rvo-harder-than-it-looks/</guid><pubDate>Tue, 13 Apr 2021 22:04:51 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=hA1WNtNyNbo&amp;#x26;ab_channel=CppCon&quot;&gt;视频地址&lt;/a&gt;
&lt;a href=&quot;https://github.com/CppCon/CppCon2018/blob/master/Presentations/return_value_optimization_harder_than_it_looks/return_value_optimization_harder_than_it_looks__arthur_odwyer__cppcon_2018.pdf&quot;&gt;Slides&lt;/a&gt;&lt;/p&gt;
&lt;!-- separate --&gt;
&lt;ol&gt;
&lt;li&gt;Return slot&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;x86-64&lt;/code&gt; 的调用约定中，对于某些返回值不能塞入寄存器（往往是 &lt;code class=&quot;language-text&quot;&gt;rax&lt;/code&gt;）中的情形，编译器会额外地添加一个隐式参数（&lt;code class=&quot;language-text&quot;&gt;return slot address&lt;/code&gt;），用于传递一个指向返回值的地址（往往是 &lt;code class=&quot;language-text&quot;&gt;rdi&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;调用方拥有 &lt;code class=&quot;language-text&quot;&gt;return slot&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre class=&quot;language-cpp&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;S&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;S&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;bool&lt;/span&gt; cond&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    S x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
    S y &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cond &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意到这里由于没有办法立刻知道返回的结果，所以不能直接把对象构造到 &lt;code class=&quot;language-text&quot;&gt;return slot&lt;/code&gt; 中。&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;复制消除&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;C++17 强制要求&lt;/p&gt;
&lt;p&gt;什么时候不能？&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre class=&quot;language-cpp&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; S y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;不知道 &lt;code class=&quot;language-text&quot;&gt;y&lt;/code&gt; 的实际位置，所以没办法直接把 &lt;code class=&quot;language-text&quot;&gt;y&lt;/code&gt; 给 &lt;code class=&quot;language-text&quot;&gt;return slot&lt;/code&gt;。以此类推，&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre class=&quot;language-cpp&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; S x&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;也无法进行复制消除。（我们不知道 &lt;code class=&quot;language-text&quot;&gt;x&lt;/code&gt; 实际存放在哪里）&lt;/p&gt;
&lt;p&gt;继承……？
如果子类比父类的 &lt;code class=&quot;language-text&quot;&gt;size&lt;/code&gt; 大&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre class=&quot;language-cpp&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SS&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token base-clause&quot;&gt;&lt;span class=&quot;token class-name&quot;&gt;S&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;double&lt;/span&gt; member&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

S &lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    SS something &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; something&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;同样也不会进行 RVO&lt;/p&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;隐式移动 (Implicitly move)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;https://wg21.cmeerw.net/cwg/issue1579&quot;&gt;CWG 1579&lt;/a&gt;，做了一些修正.&lt;/p&gt;
&lt;p&gt;优先把对象当成“右值”，根据重载决议选择移动构造函数。如果重载决议失败了，或者说重载决议选择的构造函数的第一个参数&lt;strong&gt;不是一个指向该对象的右值引用（可以有 cv 限定）&lt;/strong&gt;，那么就再把它当成“左值”再去进行一次重载决议。&lt;/p&gt;
&lt;p&gt;目前的&lt;a href=&quot;http://eel.is/c++draft/class.copy.elision#3&quot;&gt;([class.copy.elison]/3)&lt;/a&gt;是，如果 &lt;code class=&quot;language-text&quot;&gt;return&lt;/code&gt; 语句中的表达式是 &lt;code class=&quot;language-text&quot;&gt;id-expression&lt;/code&gt;，并且这个表达式指代的对象在函数体或者参数中，并且可以被移动，那么就优先考虑移动操作。&lt;/p&gt;
&lt;p&gt;所以如果是继承的对象的话，即使有移动构造函数，但是如果不是完全匹配的话，那么仍然不会进行隐式移动。&lt;/p&gt;
&lt;p&gt;这个提案被加进去的原因之一是因为 &lt;code class=&quot;language-text&quot;&gt;std::unique_ptr&lt;/code&gt;，&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre class=&quot;language-cpp&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;unique_ptr&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;ConfigManager&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;auto&lt;/span&gt; p &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;make_unique&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;ConfigManagerImpl&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; p&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里面就不需要 &lt;code class=&quot;language-text&quot;&gt;conversion operators&lt;/code&gt;，只需要有一个接受右值引用的构造函数(&lt;code class=&quot;language-text&quot;&gt;converting constructors&lt;/code&gt;)就行了。&lt;/p&gt;
&lt;p&gt;还是他的一篇博文：
&lt;a href=&quot;https://quuxplusone.github.io/blog/2021/03/07/copy-elision-borks-escape-analysis/&quot;&gt;https://quuxplusone.github.io/blog/2021/03/07/copy-elision-borks-escape-analysis/&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[「cppcon 2019」cpp20-synchronization-library]]></title><description><![CDATA[视频地址
Slides]]></description><link>https://zyounan.github.io/cxx/[cppcon-2019]-cpp20-synchronization-library/</link><guid isPermaLink="false">https://zyounan.github.io/cxx/[cppcon-2019]-cpp20-synchronization-library/</guid><pubDate>Thu, 25 Mar 2021 17:03:49 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Zcqwb3CWqs4&quot;&gt;视频地址&lt;/a&gt;
&lt;a href=&quot;https://github.com/CppCon/CppCon2019/blob/master/Presentations/cpp20_synchronization_library/cpp20_synchronization_library__r2__bryce_adelstein_lelbach__cppcon_2019.pdf&quot;&gt;Slides&lt;/a&gt;  &lt;/p&gt;
&lt;!-- separate --&gt;
&lt;p&gt;大致介绍了新增的四种同步设施  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;std::atomic::wait&lt;/code&gt; 和 &lt;code class=&quot;language-text&quot;&gt;std::atomic::notify_*&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;std::atomic_ref&lt;/code&gt; 对非 &lt;code class=&quot;language-text&quot;&gt;atomic&lt;/code&gt; 对象的方便地应用 &lt;code class=&quot;language-text&quot;&gt;std::atomic&lt;/code&gt; 操作&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;std::counting_semaphore&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;std::latch&lt;/code&gt; 和 &lt;code class=&quot;language-text&quot;&gt;std::barrier&lt;/code&gt; 线程同步设施&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;code-classlanguage-textjthreadcode&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#code-classlanguage-textjthreadcode&quot; aria-label=&quot;code classlanguage textjthreadcode permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code class=&quot;language-text&quot;&gt;jthread&lt;/code&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;j&lt;/code&gt; 代表 &lt;code class=&quot;language-text&quot;&gt;joinable&lt;/code&gt;（也是提案 P0660 的作者之一的名字首字母）&lt;/li&gt;
&lt;li&gt;析构的时候如果 &lt;code class=&quot;language-text&quot;&gt;joinable&lt;/code&gt;，会 &lt;code class=&quot;language-text&quot;&gt;join()&lt;/code&gt; 而不是 &lt;code class=&quot;language-text&quot;&gt;terminate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;invocable&lt;/code&gt; 可以接受 &lt;code class=&quot;language-text&quot;&gt;std::stop_token&lt;/code&gt; 作为第一个参数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;std::stop_source&lt;/code&gt; 类似于 &lt;code class=&quot;language-text&quot;&gt;promise&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;std::stop_token&lt;/code&gt; 类似于 &lt;code class=&quot;language-text&quot;&gt;future&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A stop&lt;em&gt;token object is not generally constructed independently, but rather retrieved from a std::jthread or std::stop&lt;/em&gt;source. This makes it share the same associated stop-state as the std::jthread or std::stop_source.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;std::stop_callback&lt;/code&gt; 类似于 &lt;code class=&quot;language-text&quot;&gt;future::then&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;要绑定到 &lt;code class=&quot;language-text&quot;&gt;stop_token&lt;/code&gt; 上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;自旋锁&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%E8%87%AA%E6%97%8B%E9%94%81&quot; aria-label=&quot;自旋锁 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;自旋锁&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;使用 &lt;code class=&quot;language-text&quot;&gt;std::atomic_flag&lt;/code&gt; 实现&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Naive 的版本：&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre class=&quot;language-cpp&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;spin_mutex&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;atomic_flag flag &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ATOMIC_FLAG_INIT&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;flag&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;test_and_set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;memory_order&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;acquire&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;unlock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        flag&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;memory_order&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;release&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;浪费效率。考虑改进：记录自旋次数，然后根据不同的次数做不同的操作。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre class=&quot;language-cpp&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;unit64_t i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; flag&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;test_and_set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;memory_order&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;acquire&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// do_nop&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// yield&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//do_sleep&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;C++20: 在 &lt;code class=&quot;language-text&quot;&gt;atomic&lt;/code&gt; 上的等待操作&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre class=&quot;language-cpp&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;flag&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;test_and_set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;memory_order&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;acquire&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        flag&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;memory_order_relaxed&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;unlock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    flag&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;memory_order&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;release&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    flag&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;notify_one&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;wait&lt;/code&gt; 和 &lt;code class=&quot;language-text&quot;&gt;notify&lt;/code&gt; 都有啥实现策略呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Futex: Fast Userspace Mutex&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这玩意儿在 Windows 下有类似的实现是 &lt;code class=&quot;language-text&quot;&gt;WaitOnAddress&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/oldnewthing/20170601-00/?p=96265&quot;&gt;Futex vs WaitOnAddress&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Condition Variables&lt;/li&gt;
&lt;li&gt;Spin Lock&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;原来的 Slides 上还放了几个方法，但是没找到相关的资料&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contention Table&lt;/li&gt;
&lt;li&gt;Timed back-off&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;ticket-lock&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#ticket-lock&quot; aria-label=&quot;ticket lock permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ticket lock&lt;/h4&gt;
&lt;p&gt;自旋锁的一种&lt;/p&gt;
&lt;p&gt;两个 &lt;code class=&quot;language-text&quot;&gt;atomic&lt;/code&gt;，类似于排队叫号的设计&lt;/p&gt;
&lt;p&gt;防止一个线程进入 &lt;code class=&quot;language-text&quot;&gt;lock&lt;/code&gt; 的时候被另一个线程抢先（插队）&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre class=&quot;language-cpp&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ticket_mutex&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;atomic&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; in &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;ATOMIC_VAR_INIT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;atomic&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; out &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;ATOMIC_VAR_INIT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; my &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; in&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;fetch_add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;memory_order&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;acquire&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; now &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;memory_order&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;acquire&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;my &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; now&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;now&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;memory_order&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;relaxed&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;unlock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;fetch_add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;memory_order&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;release&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;notify_all&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;False Sharing&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;in&lt;/code&gt; 和 &lt;code class=&quot;language-text&quot;&gt;out&lt;/code&gt; 可能会被放到一个 &lt;code class=&quot;language-text&quot;&gt;Cache Line&lt;/code&gt; 中。两个相互独立的原子变量都会导致 Cache 的重新装载&lt;/p&gt;
&lt;p&gt;解决方案：&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre class=&quot;language-cpp&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;alignas&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;hardware_destructive_interference_size&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;atomic&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; in &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;ATOMIC_VAR_INIT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;std::hardware_constructive_interference_size&lt;/code&gt; 是保证 &lt;code class=&quot;language-text&quot;&gt;True sharing&lt;/code&gt; 的最大上限，
&lt;code class=&quot;language-text&quot;&gt;std::hardware_destructive_interference_size&lt;/code&gt; 是保证 &lt;code class=&quot;language-text&quot;&gt;False sharing&lt;/code&gt; 的最小下限。&lt;/p&gt;
&lt;h3 id=&quot;code-classlanguage-textstdlatchcode-vs-code-classlanguage-textstdbarriercode&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#code-classlanguage-textstdlatchcode-vs-code-classlanguage-textstdbarriercode&quot; aria-label=&quot;code classlanguage textstdlatchcode vs code classlanguage textstdbarriercode permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code class=&quot;language-text&quot;&gt;std::latch&lt;/code&gt; vs &lt;code class=&quot;language-text&quot;&gt;std::barrier&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;latch&lt;/code&gt; 有门闩的意思，实际上很形象：大致作用就是让所有线程们遇到它就阻塞，同时等待某个事件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Supports asynchronous arrival&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;考虑这样的一个场景，假设有一个任务队列&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre class=&quot;language-cpp&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;size_t QueueDepth&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;bounded_depth_task_manager&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;process_tasks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;stop_token s&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stop_requested&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            tasks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;deque&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// 如果最后一个任务在线程 A deque 之前被线程 B 取走了&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// 那么线程 A 就阻塞到 tasks 中等待，但是这个时候队列是空的&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// 我们需要把它从这个循环中拿出来&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;// 确保队列在 `request_stop` 后是空的&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;auto&lt;/span&gt; task &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; tasks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;try_deque&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;task&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;bounded_depth_task_manager&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;latch &lt;span class=&quot;token function&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;threads&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 线程数 + 主线程&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// 确保每个线程取到一次这个任务，然后在上面等待&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;views&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;iota&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; threads&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            tasks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; l&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;arrive_and_wait&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; 
        threads&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;request_stop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        l&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;count_down&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;         &lt;span class=&quot;token comment&quot;&gt;// 如果所有线程都阻塞在这个任务上了，那么现在的计数值就是 1&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// 主线程释放掉这个，那么所有的线程就可以继续运行，之后正常退出&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// 相当于让所有线程都在等待一件事情&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;std::latch&lt;/code&gt; 是一次性的，也就是它的计数值是不能增加的。
&lt;code class=&quot;language-text&quot;&gt;std::barrier&lt;/code&gt; 就不是一次性的。它拥有多个阶段 (phases)，每个阶段在线程计数值到 0 后调用回调；之后重新将计数值调整到构造函数指定的值。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Bazel 学习笔记]]></title><description><![CDATA[官方文档的大致整理 :)]]></description><link>https://zyounan.github.io/随手记/bazel-学习笔记/</link><guid isPermaLink="false">https://zyounan.github.io/随手记/bazel-学习笔记/</guid><pubDate>Fri, 05 Mar 2021 14:04:14 GMT</pubDate><content:encoded>&lt;p&gt;官方文档的大致整理 :)&lt;/p&gt;
&lt;!-- separate --&gt;
&lt;h3 id=&quot;一些基本概念和名词&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%E4%B8%80%E4%BA%9B%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E5%92%8C%E5%90%8D%E8%AF%8D&quot; aria-label=&quot;一些基本概念和名词 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;一些基本概念和名词&lt;/h3&gt;
&lt;h4 id=&quot;workspace&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#workspace&quot; aria-label=&quot;workspace permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Workspace&lt;/h4&gt;
&lt;p&gt;拥有一个名为 &lt;code class=&quot;language-text&quot;&gt;WORKSPACE&lt;/code&gt; 文件的目录被称为 &lt;code class=&quot;language-text&quot;&gt;workspace&lt;/code&gt; 的根目录。根目录下的子目录如果拥有 &lt;code class=&quot;language-text&quot;&gt;WORKSPACE&lt;/code&gt; 则会被忽略。&lt;code class=&quot;language-text&quot;&gt;WORKSPACE.bazel&lt;/code&gt; 是别名，只不过优先级更高一些。&lt;/p&gt;
&lt;h4 id=&quot;repositories&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#repositories&quot; aria-label=&quot;repositories permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Repositories&lt;/h4&gt;
&lt;p&gt;包含 &lt;code class=&quot;language-text&quot;&gt;WORKSPACE&lt;/code&gt; 文件的目录是主仓库的根目录，也被缩写为 &lt;code class=&quot;language-text&quot;&gt;@&lt;/code&gt;。外部的仓库在 &lt;code class=&quot;language-text&quot;&gt;WORKSPACE&lt;/code&gt; 文件中定义。&lt;/p&gt;
&lt;h4 id=&quot;packages&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#packages&quot; aria-label=&quot;packages permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Packages&lt;/h4&gt;
&lt;p&gt;仓库中代码组织的基本单位是 &lt;code class=&quot;language-text&quot;&gt;package&lt;/code&gt;。包里面包含文件/外部依赖。
包所在的目录应该包含一个名字是 &lt;code class=&quot;language-text&quot;&gt;BUILD&lt;/code&gt; 或者 &lt;code class=&quot;language-text&quot;&gt;BUILD.bazel&lt;/code&gt; 的文件。一个包包含了它的所有&lt;strong&gt;除含有 &lt;code class=&quot;language-text&quot;&gt;BUILD(.bazel)&lt;/code&gt; 的&lt;/strong&gt;子目录。&lt;/p&gt;
&lt;h4 id=&quot;targets&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#targets&quot; aria-label=&quot;targets permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Targets&lt;/h4&gt;
&lt;p&gt;所谓的 &lt;code class=&quot;language-text&quot;&gt;package&lt;/code&gt; （以下写成&lt;em&gt;包&lt;/em&gt;）就是一个容器。包中的元素被称为 &lt;code class=&quot;language-text&quot;&gt;targets&lt;/code&gt;。&lt;code class=&quot;language-text&quot;&gt;targets&lt;/code&gt; 由&lt;strong&gt;文件&lt;/strong&gt; 和 &lt;strong&gt;规则&lt;/strong&gt; 组成，另外也有 &lt;code class=&quot;language-text&quot;&gt;package groups&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文件被分为两类。一种是代码文件，一种是构造工具（例如 &lt;code class=&quot;language-text&quot;&gt;Qt Moc&lt;/code&gt;）生成的文件&lt;/li&gt;
&lt;li&gt;规则。处理输入，生成输出。规则的输出永远被看成生成的文件。规则的输入可能是代码文件，也可能包含其它的规则文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;labels&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#labels&quot; aria-label=&quot;labels permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Labels&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;Target&lt;/code&gt; 的名字被称为 &lt;code class=&quot;language-text&quot;&gt;label&lt;/code&gt;（标签）。形式地来讲，&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;txt&quot;&gt;&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;@myrepo//my/app/main:app_binary&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;如果标签引用的 &lt;code class=&quot;language-text&quot;&gt;target&lt;/code&gt; 在同一个仓库下面，仓库名 &lt;code class=&quot;language-text&quot;&gt;@myrepo&lt;/code&gt; 可以省略。&lt;/li&gt;
&lt;li&gt;标签由两个部分组成。由 &lt;code class=&quot;language-text&quot;&gt;//&lt;/code&gt; 打头，包名 (&lt;code class=&quot;language-text&quot;&gt;my/app/main&lt;/code&gt;) 和目标名 (&lt;code class=&quot;language-text&quot;&gt;app_binary&lt;/code&gt;)。如果冒号被省略了，那么就认为目标名和包名的最后一个部分(例子中的 &lt;code class=&quot;language-text&quot;&gt;main&lt;/code&gt;) 一致。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在一个 &lt;code class=&quot;language-text&quot;&gt;BUILD&lt;/code&gt; 规则中，以下形式是等价的&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;txt&quot;&gt;&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;//my/app:app
//my/app
:app
app&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;BUILD&lt;/code&gt; 规则中可以使用相对（包目录的）路径指向文件。但是如果在别的地方，例如命令行中，有 &lt;code class=&quot;language-text&quot;&gt;//my/app:generate.cc&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;相对路径不能被用来指向其他包中的 &lt;code class=&quot;language-text&quot;&gt;targets&lt;/code&gt;。这个时候就必须用完整路径了。举一个例子，例如代码目录包含包&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;A&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;code class=&quot;language-text&quot;&gt;my/app&lt;/code&gt; 和包 &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;B&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.05017em;&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;code class=&quot;language-text&quot;&gt;my/app/testdata&lt;/code&gt; 。包 &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;B&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.05017em;&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 包含有 &lt;code class=&quot;language-text&quot;&gt;testdepot.zip&lt;/code&gt; 这个文件。那么
&lt;code class=&quot;language-text&quot;&gt;testdata/testdepot.zip&lt;/code&gt; 这样的写法不行、但是 &lt;code class=&quot;language-text&quot;&gt;//my/app/testdata:testdepot.zip&lt;/code&gt; 这样的写法是可以的。&lt;/p&gt;
&lt;p&gt;以 &lt;code class=&quot;language-text&quot;&gt;@//&lt;/code&gt; 打头的标签指向的是主仓库(从外部仓库的视角来看也是这样的!) 因此 &lt;code class=&quot;language-text&quot;&gt;@//a/b/c&lt;/code&gt; 和 &lt;code class=&quot;language-text&quot;&gt;//a/b/c&lt;/code&gt; 是不一样的。&lt;/p&gt;
&lt;h4 id=&quot;code-classlanguage-textlabelscode-的命名规则&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#code-classlanguage-textlabelscode-%E7%9A%84%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99&quot; aria-label=&quot;code classlanguage textlabelscode 的命名规则 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code class=&quot;language-text&quot;&gt;Labels&lt;/code&gt; 的命名规则&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;目标名, &lt;code class=&quot;language-text&quot;&gt;//...:target-name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;规则的名字就是 &lt;code class=&quot;language-text&quot;&gt;BUILD&lt;/code&gt; 文件中 &lt;code class=&quot;language-text&quot;&gt;name&lt;/code&gt; 的值&lt;/li&gt;
&lt;li&gt;文件的名字就是相对于包含 &lt;code class=&quot;language-text&quot;&gt;BUILD&lt;/code&gt; 文件的路径名&lt;/li&gt;
&lt;li&gt;允许使用的符号 &lt;code class=&quot;language-!&quot;&gt;-@^_` &amp;quot;#$&amp;amp;&amp;#39;()*-+,;&amp;lt;=&amp;gt;?[]{|}~/.&lt;/code&gt; 以及 &lt;code class=&quot;language-text&quot;&gt;[0-9A-Za-z]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如果要指代其他的包，请不要使用 &lt;code class=&quot;language-text&quot;&gt;..&lt;/code&gt; 这样的符号。使用 &lt;code class=&quot;language-text&quot;&gt;//packagename:filename&lt;/code&gt;。路径名必须是相对的，但是 &lt;code class=&quot;language-text&quot;&gt;..&lt;/code&gt; 和 &lt;code class=&quot;language-text&quot;&gt;./&lt;/code&gt; 和用 &lt;code class=&quot;language-text&quot;&gt;/&lt;/code&gt; 作为路径的开头和结尾这样的作法是被禁止的。当然多次出现的 &lt;code class=&quot;language-text&quot;&gt;//&lt;/code&gt; 也是不被允许的(为啥捏？因为 &lt;code class=&quot;language-text&quot;&gt;target&lt;/code&gt; 名有可能含有 &lt;code class=&quot;language-text&quot;&gt;.&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;包名, &lt;code class=&quot;language-text&quot;&gt;//package-name:...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;包含 &lt;code class=&quot;language-text&quot;&gt;BUILD&lt;/code&gt; 文件的目录名就是包名，例如 &lt;code class=&quot;language-text&quot;&gt;my/app&lt;/code&gt;。注意包名中不能含有 &lt;code class=&quot;language-text&quot;&gt;/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;不能含有 &lt;code class=&quot;language-text&quot;&gt;//&lt;/code&gt;，不能以 &lt;code class=&quot;language-text&quot;&gt;/&lt;/code&gt; 结尾&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;规则&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%E8%A7%84%E5%88%99&quot; aria-label=&quot;规则 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;规则&lt;/h4&gt;
&lt;p&gt;给个样例看一下，&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;txt&quot;&gt;&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;cc_binary(
    name = &amp;quot;my_app&amp;quot;,
    srcs = [&amp;quot;my_app.cc&amp;quot;],
    deps = [
        &amp;quot;//absl/base&amp;quot;,
        &amp;quot;//absl/strings&amp;quot;,
    ],
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;srcs&lt;/code&gt; 属性 [ &lt;code class=&quot;language-text&quot;&gt;labels&lt;/code&gt; 的一个列表]&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;outs&lt;/code&gt; 属性 [ &lt;code class=&quot;language-text&quot;&gt;output labels&lt;/code&gt; 的一个列表]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不能含有包的部分&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;build-文件&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#build-%E6%96%87%E4%BB%B6&quot; aria-label=&quot;build 文件 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BUILD 文件&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;BUILD&lt;/code&gt; 文件使用的命令式语言是 &lt;code class=&quot;language-text&quot;&gt;Starlark&lt;/code&gt; 。虽然说注意顺序是必要的，但是大部分的情形下，&lt;code class=&quot;language-text&quot;&gt;BUILD&lt;/code&gt; 文件仅仅包含&lt;em&gt;构建规则&lt;/em&gt; 的声明，并且这些声明的先后顺序是无关紧要的。当一个构建规则函数，例如 &lt;code class=&quot;language-text&quot;&gt;cc_library&lt;/code&gt; 被执行的时候，它在 &lt;em&gt;依赖图&lt;/em&gt; 中创建一个新的 &lt;em&gt;目标&lt;/em&gt;。这个目标之后可以被通过 &lt;em&gt;标签&lt;/em&gt; 引用。所以仅仅更改声明顺序是没有关系的。&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;BUILD&lt;/code&gt; 文件中不能包含函数的定义，&lt;code class=&quot;language-text&quot;&gt;for&lt;/code&gt; 语句或者 &lt;code class=&quot;language-text&quot;&gt;if&lt;/code&gt; 语句。但是 &lt;code class=&quot;language-text&quot;&gt;list comprehensions&lt;/code&gt; 和 &lt;code class=&quot;language-text&quot;&gt;if&lt;/code&gt; 表达式是 OK 的。函数在 &lt;code class=&quot;language-text&quot;&gt;.bzl&lt;/code&gt; 文件中声明，另外 &lt;code class=&quot;language-text&quot;&gt;*args&lt;/code&gt; 和 &lt;code class=&quot;language-text&quot;&gt;**kwargs&lt;/code&gt; 不被允许出现在 &lt;code class=&quot;language-text&quot;&gt;BUILD&lt;/code&gt; 文件中，只能显式地全部列出来。&lt;/p&gt;
&lt;p&gt;不能在 &lt;code class=&quot;language-text&quot;&gt;Starlark&lt;/code&gt; 中随意使用 &lt;code class=&quot;language-text&quot;&gt;IO&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;编码只能使用 &lt;code class=&quot;language-text&quot;&gt;ASCII&lt;/code&gt;。（连 &lt;code class=&quot;language-text&quot;&gt;utf-8&lt;/code&gt; 都不支持的吗！）&lt;/p&gt;
&lt;h4 id=&quot;加载插件&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%E5%8A%A0%E8%BD%BD%E6%8F%92%E4%BB%B6&quot; aria-label=&quot;加载插件 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;加载插件&lt;/h4&gt;
&lt;p&gt;插件是以 &lt;code class=&quot;language-text&quot;&gt;.bzl&lt;/code&gt; 结尾的文件。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;txt&quot;&gt;&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;load(&amp;quot;//foo/bar:file.bzl&amp;quot;, &amp;quot;some_library&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这段代码将会加载 &lt;code class=&quot;language-text&quot;&gt;foo/bar/file.bzl&lt;/code&gt; 并且把符号 &lt;code class=&quot;language-text&quot;&gt;some_library&lt;/code&gt; 添加到环境中。可以用来加载规则、字符串、函数、常量。注意 &lt;code class=&quot;language-text&quot;&gt;load&lt;/code&gt; 接受可变参数用来添加多个符号；实参必须是&lt;strong&gt;字符串字面量&lt;/strong&gt;，不能是变量。不能把 &lt;code class=&quot;language-text&quot;&gt;load&lt;/code&gt; 放到函数里，只能放到顶层。语句中的相对标签应该使用 &lt;code class=&quot;language-text&quot;&gt;:&lt;/code&gt; 作为起始。&lt;code class=&quot;language-text&quot;&gt;load&lt;/code&gt; 也支持别名。把这些规则缝合到一起看一下，&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;txt&quot;&gt;&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;load(&amp;quot;:my_rules.bzl&amp;quot;, &amp;quot;some_rule&amp;quot;, nice_alias = &amp;quot;some_other_rule&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意 &lt;code class=&quot;language-text&quot;&gt;.bzl&lt;/code&gt; 文件中， 以下划线开头的符号不会被导出、并且不能被其他的导入。目前也不需要使用 &lt;code class=&quot;language-text&quot;&gt;exports_files&lt;/code&gt; 让某个符号可见。&lt;/p&gt;
&lt;h4 id=&quot;构建规则的类型&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%E6%9E%84%E5%BB%BA%E8%A7%84%E5%88%99%E7%9A%84%E7%B1%BB%E5%9E%8B&quot; aria-label=&quot;构建规则的类型 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;构建规则的类型&lt;/h4&gt;
&lt;p&gt;不同语言使用的构建语句成组出现。例如，对于 C++ ，&lt;code class=&quot;language-text&quot;&gt;cc_binary&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;cc_library&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;cc_test&lt;/code&gt; 对应可执行、库、测试。Java 的前缀是 &lt;code class=&quot;language-text&quot;&gt;java_*&lt;/code&gt; 。当然你自己创建一些新的规则也是可以的，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;*_binary&lt;/code&gt; 规则使用给定的语言构造可执行程序。执行构建后，对应名字的可执行文件将会出现在当前规则标签的输出树中。例如 &lt;code class=&quot;language-text&quot;&gt;//my:program&lt;/code&gt; 将会出现在 &lt;code class=&quot;language-text&quot;&gt;$(BINDIR)/my/program&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;*_library&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;*_test&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;依赖&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%E4%BE%9D%E8%B5%96&quot; aria-label=&quot;依赖 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;依赖&lt;/h4&gt;
&lt;p&gt;依赖图是 &lt;strong&gt;DAG&lt;/strong&gt;. 直接依赖、传递依赖&lt;/p&gt;
&lt;h5 id=&quot;实际和声明的依赖&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%E5%AE%9E%E9%99%85%E5%92%8C%E5%A3%B0%E6%98%8E%E7%9A%84%E4%BE%9D%E8%B5%96&quot; aria-label=&quot;实际和声明的依赖 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;实际和声明的依赖&lt;/h5&gt;
&lt;p&gt;目标 &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;X&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.07847em;&quot;&gt;X&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 实际依赖目标 &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;Y&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.22222em;&quot;&gt;Y&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 当且仅当 &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;Y&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.22222em;&quot;&gt;Y&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 存在，并且是最新版本时才可正确构建目标 &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;X&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.07847em;&quot;&gt;X&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;目标 &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;X&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.07847em;&quot;&gt;X&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 声明依赖目标 &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;Y&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.22222em;&quot;&gt;Y&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 当且仅当在包 &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;X&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.07847em;&quot;&gt;X&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 中有一条从 &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;X&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.07847em;&quot;&gt;X&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 到 &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;Y&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.22222em;&quot;&gt;Y&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 的依赖边。&lt;/p&gt;
&lt;p&gt;要求所有的实际依赖必须在声明依赖中出现。不过过多的声明依赖让构造速度减慢。&lt;/p&gt;
&lt;p&gt;在构建目标 &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;X&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.07847em;&quot;&gt;X&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 的时候，构建工具检查 &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;X&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.07847em;&quot;&gt;X&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 依赖的传递闭包，确保这些目标的所有更改都能影响最终的结果，如果需要的话，重新构建中间件。&lt;/p&gt;
&lt;p&gt;考虑这样的一个问题，&lt;/p&gt;
&lt;p&gt;一开始，事情很美好。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;txt&quot;&gt;&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;# In file a/BUILD

rule(
    name = &amp;quot;a&amp;quot;,
    srcs = &amp;quot;a.in&amp;quot;,
    deps = &amp;quot;//b:b&amp;quot;,
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;txt&quot;&gt;&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;# In file b/BUILD

rule(
    name = &amp;quot;b&amp;quot;,
    srcs = &amp;quot;b.in&amp;quot;,
    deps = &amp;quot;//c:c&amp;quot;,
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// a/a.in&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
b&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// b/b.in&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; c&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    c&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;之后我们在 &lt;code class=&quot;language-text&quot;&gt;a.in&lt;/code&gt; 中引入一点东西，&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;diff&quot;&gt;&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;import b;
&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt; import c;
&lt;/span&gt;
b.foo();
&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt; c.garply();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是这个时候我们没有在 &lt;code class=&quot;language-text&quot;&gt;a/BUILD&lt;/code&gt; 中引入对 &lt;code class=&quot;language-text&quot;&gt;c&lt;/code&gt; 的 &lt;code class=&quot;language-text&quot;&gt;deps&lt;/code&gt;。换句话说，这个时候的 &lt;em&gt;声明引用&lt;/em&gt; 是这样的，  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://docs.bazel.build/versions/master/images/a_b_c.svg&quot;&gt;&lt;/p&gt;
&lt;p&gt;与此同时 &lt;em&gt;实际引用&lt;/em&gt; 是这样的，  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://docs.bazel.build/versions/master/images/a_b_c_ac.svg&quot;&gt;&lt;/p&gt;
&lt;p&gt;这两个图的传递闭包是一样的，所以构造的时候应该没什么问题——但是这个时候，有个人重构了 &lt;code class=&quot;language-text&quot;&gt;b&lt;/code&gt; , &lt;code class=&quot;language-text&quot;&gt;b&lt;/code&gt; 不再依赖 &lt;code class=&quot;language-text&quot;&gt;c&lt;/code&gt; 了：&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;txt&quot;&gt;&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;# In file b/BUILD
rule(
    name = &amp;quot;b&amp;quot;,
    srcs = &amp;quot;b.in&amp;quot;,
    deps = &amp;quot;//d:d&amp;quot;,
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// b/b.in&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; d&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    d&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;baz&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;声明引用&lt;/em&gt; 现在变成了这个样子，
&lt;img src=&quot;https://docs.bazel.build/versions/master/images/ab_c.svg&quot;&gt;,&lt;/p&gt;
&lt;p&gt;&lt;em&gt;实际引用&lt;/em&gt; 是这样的，
&lt;img src=&quot;https://docs.bazel.build/versions/master/images/a_b_a_c.svg&quot;&gt;,&lt;/p&gt;
&lt;p&gt;你发现 &lt;em&gt;实际引用&lt;/em&gt; 中的这条边 &lt;code class=&quot;language-text&quot;&gt;a --&amp;gt; c&lt;/code&gt; 并未在 &lt;em&gt;声明引用&lt;/em&gt; 中出现 —— 这就会让构建出现问题。&lt;/p&gt;
&lt;h5 id=&quot;依赖的类型&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%E4%BE%9D%E8%B5%96%E7%9A%84%E7%B1%BB%E5%9E%8B&quot; aria-label=&quot;依赖的类型 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;依赖的类型&lt;/h5&gt;
&lt;p&gt;大部分的构造规则拥有三种的依赖类型：&lt;code class=&quot;language-text&quot;&gt;srcs&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;deps&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;data&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;srcs&lt;/code&gt; 依赖&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;直接被规则使用或者输出源文件的构建规则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;deps&lt;/code&gt; 依赖&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指向被独立构建模块的规则。这些独立构建的模块提供头文件、符号、库……&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;data&lt;/code&gt; 依赖&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如单元测试中使用的数据文件。&lt;/p&gt;
&lt;h5 id=&quot;使用标签指代目录&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%E4%BD%BF%E7%94%A8%E6%A0%87%E7%AD%BE%E6%8C%87%E4%BB%A3%E7%9B%AE%E5%BD%95&quot; aria-label=&quot;使用标签指代目录 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用标签指代目录&lt;/h5&gt;
&lt;h3 id=&quot;命令&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%E5%91%BD%E4%BB%A4&quot; aria-label=&quot;命令 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;bazel build path/to/srcs:target&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;bazel run path/to/srcs:target&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;bazel test path/to/srcs:target&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;bazel clean&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果 &lt;code class=&quot;language-text&quot;&gt;target&lt;/code&gt; 是 &lt;code class=&quot;language-text&quot;&gt;all&lt;/code&gt;，那么就是构建当前目录下的所有东西。例如 &lt;code class=&quot;language-text&quot;&gt;bazel build src:all&lt;/code&gt;; 但是如果要构建 &lt;code class=&quot;language-text&quot;&gt;workspace&lt;/code&gt; 下面的所有目标，可以使用 &lt;code class=&quot;language-text&quot;&gt;...&lt;/code&gt; 这样的模式。&lt;/p&gt;
&lt;h3 id=&quot;引入其他语言&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%E5%BC%95%E5%85%A5%E5%85%B6%E4%BB%96%E8%AF%AD%E8%A8%80&quot; aria-label=&quot;引入其他语言 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;引入其他语言&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;WORKSPACE&lt;/code&gt; 可以 &lt;code class=&quot;language-text&quot;&gt;load&lt;/code&gt; 一些东西……&lt;/p&gt;
&lt;p&gt;自带的先引进来&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;starlark&quot;&gt;&lt;pre class=&quot;language-starlark&quot;&gt;&lt;code class=&quot;language-starlark&quot;&gt;load(&amp;quot;@bazel_tools//tools/build_defs/repo:http.bzl&amp;quot;, &amp;quot;http_archive&amp;quot;)
# 类似的还有 git_repostiory
load(&amp;quot;@bazel_tools//tools/build_defs/repo:git.bzl&amp;quot;, &amp;quot;git_repository&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后你就可以引入外部的规则啦! 引入的东西下载到 &lt;code class=&quot;language-text&quot;&gt;bazel-&amp;lt;workspace_name&amp;gt;/external/&lt;/code&gt; 下面。
引入一个 &lt;code class=&quot;language-text&quot;&gt;Golang&lt;/code&gt; 的试一下，首先先下载，&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bazel&quot;&gt;&lt;pre class=&quot;language-bazel&quot;&gt;&lt;code class=&quot;language-bazel&quot;&gt;http_archive(
    name = &amp;quot;io_bazel_rules_go&amp;quot;,
    urls = [&amp;quot;https://github.com/bazelbuild/rules_go/releases/download/v0.26.0/rules_go-v0.26.0.tar.gz&amp;quot;],
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;之后这个规则对应的仓库名就叫 &lt;code class=&quot;language-text&quot;&gt;io_bazel_rules_go&lt;/code&gt;，初始化一下，&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bazel&quot;&gt;&lt;pre class=&quot;language-bazel&quot;&gt;&lt;code class=&quot;language-bazel&quot;&gt;load(&amp;quot;@io_bazel_rules_go//go:deps.bzl&amp;quot;, &amp;quot;go_register_toolchains&amp;quot;, &amp;quot;go_rules_dependencies&amp;quot;)

go_rules_dependencies()

go_register_toolchains(
    version = &amp;quot;host&amp;quot;,
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;好了，现在可以在 &lt;code class=&quot;language-text&quot;&gt;BUILD&lt;/code&gt; 下面写规则了&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bazel&quot;&gt;&lt;pre class=&quot;language-bazel&quot;&gt;&lt;code class=&quot;language-bazel&quot;&gt;load(&amp;quot;@io_bazel_rules_go//go:def.bzl&amp;quot;, &amp;quot;go_binary&amp;quot;)
go_binary(
    name = &amp;quot;hello_world_go&amp;quot;,
    srcs = [&amp;quot;hello_world.go&amp;quot;],
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;引入 &lt;code class=&quot;language-text&quot;&gt;Rust&lt;/code&gt;，参考 &lt;a href=&quot;https://bazelbuild.github.io/rules_rust/&quot;&gt;https://bazelbuild.github.io/rules_rust/&lt;/a&gt;  &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bazel&quot;&gt;&lt;pre class=&quot;language-bazel&quot;&gt;&lt;code class=&quot;language-bazel&quot;&gt;http_archive(
    name = &amp;quot;rules_rust&amp;quot;,
    sha256 = &amp;quot;e6d835ee673f388aa5b62dc23d82db8fc76497e93fa47d8a4afe97abaf09b10d&amp;quot;,
    strip_prefix = &amp;quot;rules_rust-f37b9d6a552e9412285e627f30cb124e709f4f7a&amp;quot;,
    urls = [
        # Master branch as of 2021-01-27
        &amp;quot;https://github.com/bazelbuild/rules_rust/archive/f37b9d6a552e9412285e627f30cb124e709f4f7a.tar.gz&amp;quot;,
    ],
)

load(&amp;quot;@rules_rust//rust:repositories.bzl&amp;quot;, &amp;quot;rust_repositories&amp;quot;)

rust_repositories()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;之后是 &lt;code class=&quot;language-text&quot;&gt;BUILD&lt;/code&gt;，&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bazel&quot;&gt;&lt;pre class=&quot;language-bazel&quot;&gt;&lt;code class=&quot;language-bazel&quot;&gt;rust_binary(
    name = &amp;quot;hello_world_rust&amp;quot;,
    srcs = [&amp;quot;hello_world.rs&amp;quot;],
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;引入-protobuf-依赖&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%E5%BC%95%E5%85%A5-protobuf-%E4%BE%9D%E8%B5%96&quot; aria-label=&quot;引入 protobuf 依赖 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;引入 Protobuf 依赖&lt;/h3&gt;
&lt;p&gt;以 C++ 为例。首先在 &lt;code class=&quot;language-text&quot;&gt;WORKSPACE&lt;/code&gt; 中引入 &lt;code class=&quot;language-text&quot;&gt;proto&lt;/code&gt; 依赖，&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bazel&quot;&gt;&lt;pre class=&quot;language-bazel&quot;&gt;&lt;code class=&quot;language-bazel&quot;&gt;load(&amp;quot;@bazel_tools//tools/build_defs/repo:git.bzl&amp;quot;, &amp;quot;git_repository&amp;quot;)

git_repository(
    name = &amp;quot;rules_proto&amp;quot;,
    remote = &amp;quot;https://github.com/bazelbuild/rules_proto.git&amp;quot;,
    commit = &amp;quot;f7a30f6f80006b591fa7c437fe5a951eb10bcbcf&amp;quot;,
    verbose = True,
)

load(&amp;quot;@rules_proto//proto:repositories.bzl&amp;quot;, &amp;quot;rules_proto_dependencies&amp;quot;, &amp;quot;rules_proto_toolchains&amp;quot;)

rules_proto_dependencies()

rules_proto_toolchains()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里不用 &lt;code class=&quot;language-text&quot;&gt;http_archive&lt;/code&gt; 的原因是官方文档给的 &lt;code class=&quot;language-text&quot;&gt;README&lt;/code&gt; 过于久远没有更新，所以和新版的 &lt;code class=&quot;language-text&quot;&gt;Bazel&lt;/code&gt; 有不兼容的地方… &lt;/p&gt;
&lt;p&gt;接着我们在 &lt;code class=&quot;language-text&quot;&gt;src&lt;/code&gt; 下面写一个 &lt;code class=&quot;language-text&quot;&gt;proto&lt;/code&gt;, &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;protobuf&quot;&gt;&lt;pre class=&quot;language-protobuf&quot;&gt;&lt;code class=&quot;language-protobuf&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;syntax&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;proto3&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt; transmission_object&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TransmissionObject&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token builtin&quot;&gt;float&lt;/span&gt; value &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt; message &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;保存为 &lt;code class=&quot;language-text&quot;&gt;transmission_object.proto&lt;/code&gt;。接着写 &lt;code class=&quot;language-text&quot;&gt;BUILD&lt;/code&gt; 文件，&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bazel&quot;&gt;&lt;pre class=&quot;language-bazel&quot;&gt;&lt;code class=&quot;language-bazel&quot;&gt;load(&amp;quot;@rules_proto//proto:defs.bzl&amp;quot;, &amp;quot;proto_library&amp;quot;)

proto_library(
    name = &amp;quot;transmission_object_proto&amp;quot;,
    srcs = [&amp;quot;transmission_object.proto&amp;quot;],
)

cc_proto_library(
    name = &amp;quot;transmission_object_cxx_proto&amp;quot;,
    deps = [&amp;quot;:transmission_object_proto&amp;quot;],
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;bazel&lt;/code&gt; 将会根据这个生成 C++ 对应的 &lt;code class=&quot;language-text&quot;&gt;protobuf&lt;/code&gt; 头文件和代码。我们写一个测试程序，&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre class=&quot;language-cpp&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token macro property&quot;&gt;&lt;span class=&quot;token directive-hash&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token directive keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;lt;iostream&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token macro property&quot;&gt;&lt;span class=&quot;token directive-hash&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token directive keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;lt;string&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token macro property&quot;&gt;&lt;span class=&quot;token directive-hash&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token directive keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;src/transmission_object.pb.h&quot;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;ios_base&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sync_with_stdio&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    GOOGLE_PROTOBUF_VERIFY_VERSION&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;float&lt;/span&gt; value&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;string message&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;cin &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; value &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    transmission_object&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;TransmissionObject obj&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    obj&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;set_message&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    obj&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;set_value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;cout &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; obj&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;DebugString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;endl&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接着在 &lt;code class=&quot;language-text&quot;&gt;BUILD&lt;/code&gt; 中加入 &lt;code class=&quot;language-text&quot;&gt;cc_binary&lt;/code&gt;，&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bazel&quot;&gt;&lt;pre class=&quot;language-bazel&quot;&gt;&lt;code class=&quot;language-bazel&quot;&gt;cc_binary(
    name = &amp;quot;proto_cxx_test&amp;quot;,
    srcs = [
        &amp;quot;run.cc&amp;quot;,
    ],
    deps = [&amp;quot;:transmission_object_cxx_proto&amp;quot;],
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;就可以愉快地构建啦！ &lt;code class=&quot;language-text&quot;&gt;bazel run src:proto_cxx_test&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;注意 &lt;code class=&quot;language-text&quot;&gt;cc&lt;/code&gt; 中包含 &lt;code class=&quot;language-text&quot;&gt;transmission_object.pb.h&lt;/code&gt; 的方式。&lt;code class=&quot;language-text&quot;&gt;bazel&lt;/code&gt; 默认将 &lt;code class=&quot;language-text&quot;&gt;proto&lt;/code&gt; 生成在 &lt;code class=&quot;language-text&quot;&gt;bazel-bin/src/&lt;/code&gt; 下面。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# bazel run src:proto_cxx_test&lt;/span&gt;
INFO: Analyzed target //src:proto_cxx_test &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; packages loaded, &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; targets configured&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;.
INFO: Found &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; target&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
Target //src:proto_cxx_test up-to-date:
  bazel-bin/src/proto_cxx_test.exe
INFO: Elapsed time: &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;.207s, Critical Path: &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;.01s
INFO: &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; process: &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; internal.
INFO: Build completed successfully, &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; total action
INFO: Build completed successfully, &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; total action
&lt;span class=&quot;token number&quot;&gt;2.7182818&lt;/span&gt; Hello,protobuf
value: &lt;span class=&quot;token number&quot;&gt;2.71828175&lt;/span&gt;
message: &lt;span class=&quot;token string&quot;&gt;&quot;Hello,protobuf&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;想用 GCC 的话可以先查询一下目前有的工具链， &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;bazel query @local_config_cc//:toolchain --output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;build&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;MinGW-w64&lt;/code&gt; 对应的名字是 &lt;code class=&quot;language-text&quot;&gt;mingw-gcc&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bazel&quot;&gt;&lt;pre class=&quot;language-bazel&quot;&gt;&lt;code class=&quot;language-bazel&quot;&gt;# Hardcoded toolchain, legacy behaviour.
cc_toolchain_suite(
    name = &amp;quot;toolchain&amp;quot;,
    toolchains = {
        &amp;quot;armeabi-v7a|compiler&amp;quot;: &amp;quot;:cc-compiler-armeabi-v7a&amp;quot;,
        &amp;quot;x64_windows|msvc-cl&amp;quot;: &amp;quot;:cc-compiler-x64_windows&amp;quot;,
        &amp;quot;x64_x86_windows|msvc-cl&amp;quot;: &amp;quot;:cc-compiler-x64_x86_windows&amp;quot;,
        &amp;quot;x64_arm_windows|msvc-cl&amp;quot;: &amp;quot;:cc-compiler-x64_arm_windows&amp;quot;,
        &amp;quot;x64_arm64_windows|msvc-cl&amp;quot;: &amp;quot;:cc-compiler-x64_arm64_windows&amp;quot;,
        &amp;quot;x64_windows|msys-gcc&amp;quot;: &amp;quot;:cc-compiler-x64_windows_msys&amp;quot;,
        &amp;quot;x64_windows|mingw-gcc&amp;quot;: &amp;quot;:cc-compiler-x64_windows_mingw&amp;quot;,
        &amp;quot;x64_windows|clang-cl&amp;quot;: &amp;quot;:cc-compiler-x64_windows-clang-cl&amp;quot;,
        &amp;quot;x64_windows_msys&amp;quot;: &amp;quot;:cc-compiler-x64_windows_msys&amp;quot;,
        &amp;quot;x64_windows&amp;quot;: &amp;quot;:cc-compiler-x64_windows&amp;quot;,
        &amp;quot;x64_x86_windows&amp;quot;: &amp;quot;:cc-compiler-x64_x86_windows&amp;quot;,
        &amp;quot;x64_arm_windows&amp;quot;: &amp;quot;:cc-compiler-x64_arm_windows&amp;quot;,
        &amp;quot;x64_arm64_windows&amp;quot;: &amp;quot;:cc-compiler-x64_arm64_windows&amp;quot;,
        &amp;quot;armeabi-v7a&amp;quot;: &amp;quot;:cc-compiler-armeabi-v7a&amp;quot;,
    },
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行 &lt;code class=&quot;language-text&quot;&gt;bazel build src:proto_cxx_test --compiler=&amp;quot;mingw-gcc&amp;quot;&lt;/code&gt; 即可。&lt;/p&gt;
&lt;p&gt;当然你也可以在 &lt;code class=&quot;language-text&quot;&gt;.bazelrc&lt;/code&gt; 中强行钦点。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[新博客]]></title><description><![CDATA[Hello, world! 试着搞一个基于  的静态博客吧。之后会把老博客上的内容逐渐搬过来 :)  公式   代码块]]></description><link>https://zyounan.github.io/随手记/新博客/</link><guid isPermaLink="false">https://zyounan.github.io/随手记/新博客/</guid><pubDate>Sun, 07 Feb 2021 19:02:34 GMT</pubDate><content:encoded>&lt;p&gt;Hello, world!&lt;/p&gt;
&lt;p&gt;试着搞一个基于 &lt;code class=&quot;language-text&quot;&gt;gatsby&lt;/code&gt; 的静态博客吧。之后会把老博客上的内容逐渐搬过来 :)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;TeX&lt;/code&gt; 公式  &lt;/li&gt;
&lt;/ul&gt;
&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mrow&gt;&lt;mo fence=&quot;true&quot;&gt;(&lt;/mo&gt;&lt;mfrac linethickness=&quot;0px&quot;&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;/mfrac&gt;&lt;mo fence=&quot;true&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mrow&gt;&lt;mo fence=&quot;true&quot;&gt;(&lt;/mo&gt;&lt;mfrac linethickness=&quot;0px&quot;&gt;&lt;mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;mo fence=&quot;true&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mrow&gt;&lt;mo fence=&quot;true&quot;&gt;(&lt;/mo&gt;&lt;mfrac linethickness=&quot;0px&quot;&gt;&lt;mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;/mfrac&gt;&lt;mo fence=&quot;true&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\binom{n}{k} = \binom{n - 1}{k - 1} + \binom{n - 1}{k}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.40003em;vertical-align:-0.95003em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen delimcenter&quot; style=&quot;top:0em;&quot;&gt;&lt;span class=&quot;delimsizing size3&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.1075599999999999em;&quot;&gt;&lt;span style=&quot;top:-2.314em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.677em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.686em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose delimcenter&quot; style=&quot;top:0em;&quot;&gt;&lt;span class=&quot;delimsizing size3&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.40003em;vertical-align:-0.95003em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen delimcenter&quot; style=&quot;top:0em;&quot;&gt;&lt;span class=&quot;delimsizing size3&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.3214400000000002em;&quot;&gt;&lt;span style=&quot;top:-2.314em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.6770000000000005em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.7693300000000001em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose delimcenter&quot; style=&quot;top:0em;&quot;&gt;&lt;span class=&quot;delimsizing size3&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.40003em;vertical-align:-0.95003em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen delimcenter&quot; style=&quot;top:0em;&quot;&gt;&lt;span class=&quot;delimsizing size3&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.32144em;&quot;&gt;&lt;span style=&quot;top:-2.314em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.677em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.686em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose delimcenter&quot; style=&quot;top:0em;&quot;&gt;&lt;span class=&quot;delimsizing size3&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;ul&gt;
&lt;li&gt;代码块  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre class=&quot;language-cpp&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token macro property&quot;&gt;&lt;span class=&quot;token directive-hash&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token directive keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;lt;algorithm&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token macro property&quot;&gt;&lt;span class=&quot;token directive-hash&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token directive keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;lt;iostream&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token macro property&quot;&gt;&lt;span class=&quot;token directive-hash&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token directive keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;lt;ranges&gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;ranges&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;for_each&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;views&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;iota&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; std&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;cout &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos; &apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;rust&quot;&gt;&lt;pre class=&quot;language-rust&quot;&gt;&lt;code class=&quot;language-rust&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;for_each&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token closure-params&quot;&gt;&lt;span class=&quot;token closure-punctuation punctuation&quot;&gt;|&lt;/span&gt;x&lt;span class=&quot;token closure-punctuation punctuation&quot;&gt;|&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token macro property&quot;&gt;print!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;{}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[about]]></title><description><![CDATA[About me 😀 Still under construction…]]></description><link>https://zyounan.github.io/resume-en/</link><guid isPermaLink="false">https://zyounan.github.io/resume-en/</guid><pubDate>Sun, 07 Feb 2021 19:02:34 GMT</pubDate><content:encoded>&lt;h1 id=&quot;about-me&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#about-me&quot; aria-label=&quot;about me permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About me&lt;/h1&gt;
&lt;p&gt;😀 Still under construction…&lt;/p&gt;</content:encoded></item></channel></rss>